# Root contract fo4r the profile
type ERC725Registry @entity {
  id: ID!
  addresses: [Bytes!]
}

type ERC725 @entity {
  id: ID!
  contractsCreated: [Bytes!] # From ContractCreated entity ID
  dataStore: [Bytes!] # From Datastore endity ID
  # contractsCreated: [ERC725ContractsCreated!] # From ContractCreated entity ID
  # dataStore: [ERC725DataStore!] # From Datastore endity ID
}

type ERC725DataStore @entity {
  id: ID!
  erc725id: String! # reference to teh root contract ERC725
  key: Bytes!
  value: Bytes
}

type ERC725ContractsCreated @entity {
  id: ID! #concat ERC725 contract address plus instantiated address
  erc725id: String! #contract of the ERC725 (profile)
  address: Bytes! # Graph has no built in type to support 'Address'
  transactionHash: Bytes!
}

type Block @entity {
  id: ID!
  hash: Bytes
}

# type ExampleEntity @entity {
#   id: ID!
#   # count: BigInt!
#   # contractAddress: Bytes! # address
#   keys: [Bytes!]
#   dataStore: [Bytes!]
# }

# type DataStore @entity {
#   id: ID!
#   entityId: ID!
#   key: Bytes!
#   value: Bytes
# }
